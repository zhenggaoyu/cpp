数组指针：
  指指向一个数组的指针，包括一维，二维，多维。
  数组名代表数组的首地址(即数组中第一个元素的地址)，是一个常量指针。
  类型 (*指针变量)[M]; //M为整形常量，表示二维数组的列数
  通常利用该指针变量，指向二维数组的行地址。 
如下：*/
#include<iostream>
using namespace std;
int main()
{
	int array[2][2]={{1,2},{3,4}};
	int (*p)[2];
	for (p=array; p<array+2; p++)
	{
		for(int i=0; i<2; i++)
		{
			cout<<*(*p+i)<<' ';
		}
		cout<<endl;
	} 
	return 0;
} 
程序运行显示：
1 2
3 4 
p是行指针，初值为0行的行地址；p++后，p指向下一行，*p代表该行0列元素的地址，*p+i为该行i列元素的地址。 

指针数组：
#include<iostream>
using namespace std;
int main()
{
	char *p[2]={"string1","string2"};
	cout<<p[1]<<' '<<*p[1]<<endl;
	return 0;
} 
程序运行显示：
string2 s
p[1]表示指向字符串二首地址的指针，返回的是整个字符串二；而*p[1]返回字符串二的首字符s。 
